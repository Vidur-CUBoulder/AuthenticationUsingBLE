#include <string.h>
#include <stdbool.h>
#include <stdint.h>

#include "em_device.h"
#include "em_chip.h"
#include "sleep_modes.h"
#include "em_aes.h"
#include "leuart.h"
#include "em_gpio.h"
#include "aes_cbc_128_dma.h"
#include "circular_buffer.h"

#include "em_dma.h"
#include "dmactrl.h"


uint8_t decryptionKey[16];

const uint8_t exampleKey[] = { 0x2B, 0x7E, 0x15, 0x16, 0x28, 0xAE, 0xD2, 0xA6,
                               0xAB, 0xF7, 0x15, 0x88, 0x09, 0xCF, 0x4F, 0x3C};


/* 64B of exampleData */
uint8_t exampleData[] = { 0x6B, 0xC1, 0xBE, 0xE2, 0x2E, 0x40, 0x9F, 0x96,
                                0xE9, 0x3D, 0x7E, 0x11, 0x73, 0x93, 0x17, 0x2A,
                                0xAE, 0x2D, 0x8A, 0x57, 0x1E, 0x03, 0xAC, 0x9C,
                                0x9E, 0xB7, 0x6F, 0xAC, 0x45, 0xAF, 0x8E, 0x51,
                                0x30, 0xC8, 0x1C, 0x46, 0xA3, 0x5C, 0xE4, 0x11,
                                0xE5, 0xFB, 0xC1, 0x19, 0x1A, 0x0A, 0x52, 0xEF,
                                0xF6, 0x9F, 0x24, 0x45, 0xDF, 0x4F, 0x9B, 0x17,
                                0xAD, 0x2B, 0x41, 0x7B, 0xE6, 0x6C, 0x37, 0x10};

/* 64B of the expected data post encryption 
 *    Will help validate if what is done is correct !
 */
const uint8_t expectedEncryptedData[] = { 0x76, 0x49, 0xAB, 0xAC, 0x81, 0x19, 0xB2, 0x46, 
                                          0xCE, 0xE9, 0x8E, 0x9B, 0x12, 0xE9, 0x19, 0x7D,
                                          0x50, 0x86, 0xCB, 0x9B, 0x50, 0x72, 0x19, 0xEE, 
                                          0x95, 0xDB, 0x11, 0x3A, 0x91, 0x76, 0x78, 0xB2,
                                          0x73, 0xBE, 0xD6, 0xB8, 0xE3, 0xC1, 0x74, 0x3B, 
                                          0x71, 0x16, 0xE6, 0x9E, 0x22, 0x22, 0x95, 0x16,
                                          0x3F, 0xF1, 0xCA, 0xA1, 0x68, 0x1F, 0xAC, 0x09, 
                                          0x12, 0x0E, 0xCA, 0x30, 0x75, 0x86, 0xE1, 0xA7};

const uint8_t initVector[] = { 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 
                               0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F};

uint8_t dataBuffer[sizeof(exampleData) / sizeof(exampleData[0])];




